version = 3.8.2
runner {
    dialect = scala3
    dialectOverride {
        allowSignificantIndentation = false
    }
}

// Max line length is 100 characters
maxColumn = 100

// Ensure lines starting with the margin character `|` are indented differently
assumeStandardLibraryStripMargin = true

// Avoid ASCII tokens
rewriteTokens = {
    "⇒": "=>"
    "→": "->"
    "←": "<-"
}

indent {
    // Use 4 spaces for indention
    main = 4
    // Do not add extra indents to match cases
    matchSite = 0
}

align {
    preset = more
    multiline = false
    openParenCallSite = false
    openParenDefnSite = false
}

spaces {
    inImportCurlyBraces = true
}

newlines {
    source = keep

    // Try to squash lambdas in one line
    afterCurlyLambdaParams = squash

    // Ensure newlines are added around top level body definitions always
    topLevelBodyIfMinStatements = [before, after]
    topLevelBodyMinStatements = 1

    // Allow line-overflow for comments and lines that would overflow even with a newline.
    avoidForSimpleOverflow = [slc, tooLong]

    topLevelStatementBlankLines = [
        {
            blanks = 1
        }
    ]
}

rewrite {
    scala3 {
        // Use Scala3 syntaxes but not indent syntax
        convertToNewSyntax = true
        removeOptionalBraces {
            enabled = false
        }
    }

    rules = [
        RedundantBraces,
        RedundantParens,
        SortModifiers,
        Imports
    ]

    // Ensure redundant braces are removed
    redundantBraces {
        maxLines = 1
        stringInterpolation = true

        defnBodies = all
        includeUnitMethods = true

        // Use parens for one line apply (like squashed lambdas)
        parensForOneLineApply = true
    }

    sortModifiers {
        order = ["override", "private", "protected", "implicit", "final", "sealed", "abstract", "lazy"]
    }

    imports {
        // Sort imports using the Scala style
        sort = scalastyle

        // Ensure a separate line is created for each selector within a `{...}` import.
        expand = true
    }
}

optIn {
    // Prefer multi line method chains
    breakChainOnFirstMethodDot = true
}

// Allow literal argument lists with newlines only once `maxColumn` is reached
binPack {
    literalArgumentLists = true
    literalsIncludeSimpleExpr = true
    literalsExclude = ["Term.Name"]
}

// Use JavaDoc style and enable wrapping when reaching `maxColumn`
docstrings {
    style = "Asterisk"
    wrap = yes
    oneline = fold
}

// Ensure code blocks inside markdown files get formated too
project.includePaths = ["glob:**.scala", "glob:**.sbt", "glob:**.sc", "glob:**.md"]
project.excludePaths = ["glob:**metals.sbt"]
